{"remainingRequest":"C:\\Users\\matia\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\matia\\Desktop\\cientifica\\cientifica-pendulo\\src\\cientifica-module.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\matia\\Desktop\\cientifica\\cientifica-pendulo\\src\\cientifica-module.vue","mtime":1560179081978},{"path":"C:\\Users\\matia\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\matia\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\matia\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matia\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\ncanvas {\r\n  border-radius: 16px 16px 16px 16px;\r\n  -moz-border-radius: 16px 16px 16px 16px;\r\n  -webkit-border-radius: 16px 16px 16px 16px;\r\n  border: 1px double #000000;\r\n}\r\n\r\n#time {\r\n  font-size: 30px;\r\n  font-weight: 400;\r\n  color: grey;\r\n}\r\n",{"version":3,"sources":["cientifica-module.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"cientifica-module.vue","sourceRoot":"src","sourcesContent":["<script>\r\nimport Vue from \"vue\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\r\n\r\nimport { BContainer, BRow, BCol, BButton, BButtonGroup } from \"bootstrap-vue\";\r\n\r\nconst STATE_RUN = 1;\r\nconst STATE_STOP = 0;\r\n\r\nexport default {\r\n  name: \"CientificaModule\", // vue component name\r\n  components: { BContainer, BRow, BCol, BButton, BButtonGroup },\r\n\r\n  data() {\r\n    return {\r\n      canvas: null,\r\n      context: null,\r\n\r\n      timeList: [],\r\n      timeStart: null,\r\n      timeEnd: null,\r\n\r\n      Angle: -90,\r\n      Length_m: 1,\r\n      timeStep_ms: 10,\r\n\r\n      runExperience: null,\r\n\r\n      state: STATE_STOP,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    \r\n  },\r\n\r\n  methods: {\r\n    PendulumSim: function(\r\n      length_m,\r\n      gravity_mps2,\r\n      initialAngle_rad,\r\n      timestep_ms,\r\n      dumping,\r\n      callback\r\n    ) {\r\n      var velocity = 0;\r\n      this.Angle = initialAngle_rad;\r\n      var k = -gravity_mps2 / length_m;\r\n      var timestep_s = timestep_ms / 1000;\r\n      this.runExperience = setInterval(() => {\r\n        var acceleration = k * Math.sin(this.Angle) - dumping * velocity;\r\n        velocity += acceleration * timestep_s;\r\n        this.Angle += velocity * timestep_s;\r\n        callback(this.Angle);\r\n      }, timestep_ms);\r\n    },\r\n\r\n    countTime: function() {\r\n      this.timeEnd = new Date().getTime();\r\n      this.timeList.push(this.timeEnd - this.timeStart);\r\n\r\n      this.stopExperience();\r\n      this.state = STATE_STOP;\r\n    },\r\n\r\n    stopExperience: function() {\r\n      clearInterval(this.runExperience);\r\n    },\r\n\r\n    initPendulum: function() {\r\n\r\n      this.timeStart = new Date().getTime();\r\n\r\n      this.state = STATE_RUN;\r\n\r\n      this.canvas = this.$refs[\"canvas\"];\r\n      this.context = this.canvas.getContext(\"2d\");\r\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n      var prev = 0;\r\n\r\n      var sim = this.PendulumSim(\r\n        this.Length_m,\r\n        9.80665,\r\n        this.Angle,\r\n        this.timeStep_ms,\r\n        0.1,\r\n        angle => {\r\n          var rPend = Math.min(this.canvas.width, this.canvas.height) * 0.47;\r\n          var rBall = Math.min(this.canvas.width, this.canvas.height) * 0.02;\r\n          var rBar = Math.min(this.canvas.width, this.canvas.height) * 0.005;\r\n          //var ballX = Math.sin(angle) * rPend;\r\n          //var ballY = Math.cos(angle) * rPend;\r\n\r\n          this.context.fillStyle = \"rgba(255,255,255,0.51)\";\r\n          this.context.globalCompositeOperation = \"destination-out\";\r\n          this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n          this.context.fillStyle = \"yellow\";\r\n          this.context.strokeStyle =\r\n            \"rgba(0,0,0,\" + Math.max(0, 1 - Math.abs(prev - angle) * 10) + \")\";\r\n          this.context.globalCompositeOperation = \"source-over\";\r\n\r\n          this.context.save();\r\n          this.context.translate(this.canvas.width / 2, this.canvas.height / 2);\r\n          this.context.rotate(angle);\r\n\r\n          this.context.beginPath();\r\n          this.context.rect(-rBar, -rBar, rBar * 2, rPend + rBar * 2);\r\n          this.context.fill();\r\n          this.context.stroke();\r\n\r\n          this.context.beginPath();\r\n          this.context.arc(0, rPend, rBall, 0, Math.PI * 2, false);\r\n          this.context.fill();\r\n          this.context.stroke();\r\n          this.context.restore();\r\n          prev = angle;\r\n        }\r\n      );\r\n    },\r\n\r\n    buttonAction: function(){\r\n      if (this.state == STATE_RUN){\r\n        this.countTime();\r\n      }else{\r\n        this.initPendulum();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <b-container class=\"mt-5\">\r\n    <b-row class=\"\">\r\n      <b-col col lg=\"2\">\r\n        <b-container>\r\n          <h6>Datos:</h6>\r\n          <span>\r\n            <strong>Angulo:</strong>\r\n            {{this.Angle}} r\r\n          </span>\r\n          <span>\r\n            <strong>Longitud:</strong>\r\n            {{this.Length_m}} m\r\n          </span>\r\n        </b-container>\r\n      </b-col>\r\n      <b-col col lg=\"5\">\r\n        <b-container>\r\n          <b-col col lg=\"12\" class=\"justify-content-md-center\">\r\n            <canvas ref=\"canvas\" width=\"470\"></canvas>\r\n          </b-col>\r\n          <b-col col lg=\"12\">\r\n            <ul id=\"example-1\">\r\n              <li v-for=\"item in timeList\">{{ item / 1000 }} segundos</li>\r\n            </ul>\r\n          </b-col>\r\n        </b-container>\r\n      </b-col>\r\n      <b-col col lg=\"5\">\r\n        <b-container>\r\n          <b-col col lg=\"12\" class=\"justify-content-md-center\">\r\n            <b-container>\r\n              <b-col col lg=\"12\" class=\"text-center mb-2\">\r\n                <span id=\"time\">00:00 min</span>\r\n              </b-col>\r\n              <b-col col lg=\"12\" class=\"mb-2\">\r\n                <b-button block variant=\"primary\" @click=\"buttonAction\">{{this.state == 0 ? \"INICIAR\" : \"CONTAR TIEMPO\"}}</b-button>\r\n              </b-col>\r\n              <b-col col lg=\"12\" class=\"justify-content-md-center\">\r\n                <span>\r\n                  <strong>Descripción:</strong>\r\n                </span>\r\n                <p>Un péndulo físico o péndulo compuesto es cualquier cuerpo rígido que pueda oscilar libremente en el campo gravitatorio alrededor de un eje horizontal fijo, que no pasa por su centro de masa.</p>\r\n              </b-col>\r\n            </b-container>\r\n          </b-col>\r\n        </b-container>\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<style>\r\ncanvas {\r\n  border-radius: 16px 16px 16px 16px;\r\n  -moz-border-radius: 16px 16px 16px 16px;\r\n  -webkit-border-radius: 16px 16px 16px 16px;\r\n  border: 1px double #000000;\r\n}\r\n\r\n#time {\r\n  font-size: 30px;\r\n  font-weight: 400;\r\n  color: grey;\r\n}\r\n</style>\r\n\r\n"]}]}